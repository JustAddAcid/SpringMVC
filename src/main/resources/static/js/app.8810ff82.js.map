{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/utils/DOMGenerator.js","webpack:///./src/scripts/utils/Eventable.js","webpack:///./src/scripts/utils/ArrayEventable.js","webpack:///./src/scripts/Model.js","webpack:///./src/scripts/TodoListItem.js","webpack:///./src/scripts/TodoList.js","webpack:///./src/scripts/TodoGenerator.js","webpack:///./src/scripts/StatusBar.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/Todo.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","gen","tagName","props","childs","el","document","createElement","prop","forEach","child","appendChild","Eventable","_classCallCheck","this","listeners","event","callback","undefined","handlers","filter","handler","_len","arguments","args","Array","_key","listener","ArrayEventable","array","_this","ArrayEventable_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","element","trigger","member","index","Model","Model_classCallCheck","path","description","_xhr","id","isChecked","method","self","Promise","resolve","reject","xhr","XMLHttpRequest","token","querySelector","getAttribute","header","open","setRequestHeader","send","_getFormData","onreadystatechange","readyState","status","statusCode","statusText","JSON","parse","responseText","formData","FormData","keys","append","TodoListItem","parentNode","text","TodoListItem_classCallCheck","TodoListItem_possibleConstructorReturn","TodoListItem_getPrototypeOf","model","DOMNode","render","_lastText","update","_this2","_checkbox","type","className","onclick","change","_textArea","oninput","autoresize","onfocus","_onTextFocus","onblur","_onTextBlur","remove","style","textDecoration","height","scrollHeight","checked","TodoList","TodoList_classCallCheck","TodoList_possibleConstructorReturn","TodoList_getPrototypeOf","items","read","then","todo","renderItem","item","on","removeItem","getItemsCount","_this3","removeChild","delete","unchecked","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","TodoGenerator","todoList","TodoGenerator_classCallCheck","input","trim","addItem","preventDefault","_inputControl","placeholder","insertBefore","onsubmit","e","submit","checkAll","StatusBar","StatusBar_classCallCheck","filterStatuses","freeze","all","active","compleated","filterStatus","leftCount","getUncheckedCount","_itemsLeftCounter","createTextNode","_filterAllBtn","textContent","_filterActiveBtn","_filterCompleatedBtn","itemsLeft","clearCompleated","newStatus","classList","add","display","Todo","Todo_classCallCheck","todoGenerator","statusBar","_board","console","log"],"mappings":"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","file":"js/app.8810ff82.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([84,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* \r\n\r\nExample:\r\n\r\ngen('div', { class: 'myClassName', id: 'myId'}, [\r\n        gen('a', { href: 'http://google.com', textContent: 'google'})\r\n])\r\n\r\n*/\r\n\r\n/**\r\n * \r\n * \r\n * @export\r\n * @param {String} tagName \r\n * @param {Object} props \r\n * @param {Array} childs \r\n * @returns {Control}\r\n */\r\nexport default function gen(tagName, props, childs){\r\n    let el = document.createElement(tagName);\r\n    //Object.assign(el,props); //ie == зло\r\n    for (let prop in props){\r\n        el[prop] = props[prop];\r\n    }\r\n    if (childs && childs.length > 0){\r\n        childs.forEach(child => el.appendChild(child));\r\n    }\r\n    return el;\r\n}","'use strict';\r\n\r\nexport default class Eventable {\r\n    constructor(){\r\n        this.listeners = {}; // event : [listener1(), listener2()]\r\n    }\r\n    /**\r\n     * Register listener on event\r\n     * \r\n     * @param {String} event \r\n     * @param {function()} callback \r\n     * \r\n     * @memberOf Eventable\r\n     */\r\n    on(event, callback){\r\n        this.listeners[event] = this.listeners[event] || [];\r\n        this.listeners[event].push(callback);\r\n    }\r\n\r\n    /**\r\n     * Remove listener on event\r\n     * \r\n     * @param {String} event \r\n     * @param {function()} callback \r\n     * @returns {Boolean}\r\n     * \r\n     * @memberOf Eventable\r\n     */\r\n    off(event, callback){\r\n        if (event === undefined){\r\n            this.listeners = {};\r\n            return true;\r\n        }\r\n        let handlers = this.listeners[event];\r\n        if (!handlers || handlers.length === 0){\r\n            return false;\r\n        }\r\n        if (callback){\r\n            this.listeners[event] = handlers.filter( handler => typeof handler === 'function' && handler !== callback );\r\n        } else {\r\n            this.listeners[event] = [];\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Fire the event\r\n     * \r\n     * @param {String} event \r\n     * @param {object[]} args \r\n     * \r\n     * @memberOf Eventable\r\n     */\r\n    trigger(event, ...args){\r\n        let listeners = this.listeners[event] || [];\r\n        listeners.forEach(listener => listener(...args));\r\n    }\r\n};\r\n","'use strict';\r\n\r\nimport Eventable from \"./Eventable\";\r\n\r\nexport default class ArrayEventable extends Eventable {\r\n    /**\r\n     * Creates an instance of ArrayEventable.\r\n     * @param {Array} array \r\n     * \r\n     * @memberOf ArrayEventable\r\n     */\r\n    constructor(array){\r\n        super();\r\n        this.array = array || [];\r\n    }\r\n\r\n    /**\r\n     * Append the element to array and fires the 'push' event (using array.push)\r\n     * \r\n     * @param {any} element \r\n     * @returns {Number} length of array after append\r\n     * \r\n     * @memberOf ArrayEventable\r\n     */\r\n    push(element){\r\n        let length = this.array.push(element);\r\n        this.trigger('push', element);\r\n        return length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * Empty the array and fires 'clear' event\r\n     * \r\n     * @memberOf ArrayEventable\r\n     */\r\n    clear(){\r\n        this.array = [];\r\n        this.trigger('clear');\r\n    }\r\n\r\n    /**\r\n     * Removes all occurrences of an item in an array.\r\n     * \r\n     * @param {any} member \r\n     * \r\n     * @memberOf ArrayEventable\r\n     */\r\n    remove(member){\r\n        this.array = this.array.filter( el => member !== el );\r\n        this.trigger('remove', member);\r\n    }\r\n\r\n    /**\r\n     * Remove item by index\r\n     * \r\n     * @param {Number} index \r\n     * \r\n     * @memberOf ArrayEventable\r\n     */\r\n    removeByIndex(index){\r\n        let member = this.array[index];\r\n        this.array.splice(index, 1);\r\n        this.trigger('remove', member);\r\n    }\r\n    length(){\r\n        return this.array.length;\r\n    }\r\n};\r\n","export default class Model {\r\n    constructor(){\r\n        this.path = '/todo';\r\n    }\r\n    /**\r\n     * `\r\n     * @param  {String} description \r\n     * @return {Promise}\r\n     * @memberof Model\r\n     */\r\n    create(description){\r\n        return this._xhr('POST', {description});\r\n    }\r\n    /**\r\n     * \r\n     * @return {Promise}\r\n     * @memberof Model\r\n     */\r\n    read(){\r\n        return this._xhr('GET');\r\n    }\r\n    /**\r\n     * \r\n     * @param  {Number} id \r\n     * @param  {String} description \r\n     * @return {Promise}\r\n     * @memberof Model\r\n     */\r\n    update(id, description, isChecked){\r\n        return this._xhr('PUT', {id, description, isChecked});\r\n    }\r\n    /**\r\n     * \r\n     * @param  {Number} id \r\n     * @return {Promise}\r\n     * @memberof Model\r\n     */\r\n    delete(id){\r\n        return this._xhr('DELETE', {id});\r\n    }\r\n    /**\r\n     * \r\n     * @param  {String} method Name of method\r\n     * @param  {Object} data Data to send to server\r\n     * @return {Promise}\r\n     * @memberof Model\r\n     */\r\n    _xhr(method, data){\r\n        const self = this;\r\n        return new Promise(function(resolve, reject){\r\n            const xhr = new XMLHttpRequest();\r\n            const token = document.querySelector(\"meta[name='_csrf']\").getAttribute('content');\r\n            const header = document.querySelector(\"meta[name='_csrf_header']\").getAttribute('content');\r\n            xhr.open(method, self.path, true);\r\n            xhr.setRequestHeader(header,token);\r\n            xhr.send(self._getFormData(data));\r\n            xhr.onreadystatechange = function(){\r\n                if (xhr.readyState !== 4) return;\r\n                if (xhr.status !== 200){\r\n                    reject({\r\n                        statusCode: xhr.status,\r\n                        statusText: xhr.statusText\r\n                    });\r\n                }\r\n                resolve(JSON.parse(xhr.responseText));                \r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n     * \r\n     * @param  {Object} [object={}] \r\n     * @return {FormData}\r\n     * @memberof Model\r\n     */\r\n    _getFormData(object = {}) {\r\n        const formData = new FormData();\r\n        Object.keys(object).forEach(key => formData.append(key, object[key]));\r\n        return formData;\r\n    }\r\n};\r\n","import gen from \"./utils/DOMGenerator\";\r\nimport Eventable from \"./utils/Eventable\";\r\nimport Model from \"./Model\";\r\n\r\nexport default class TodoListItem extends Eventable {\r\n    /**\r\n     * Creates an instance of TodoListItem.\r\n     * @param {Control} parentNode \r\n     * @param {String} text \r\n     * @param {Number} id\r\n     * @param {Boolean} isChecked \r\n     * \r\n     * @memberOf TodoListItem\r\n     */\r\n    constructor(parentNode, text, id, isChecked){\r\n        super();\r\n        this.model = new Model();\r\n        this.DOMNode = this.render(parentNode);\r\n\r\n        this.isChecked = !!isChecked;\r\n        this.text = text;\r\n        this.id = id;\r\n    }\r\n\r\n    // Кустарный вариант двустороннего биндинга\r\n    get isChecked(){\r\n        if (this._checkbox){\r\n            return this._checkbox.checked;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    set isChecked(value){\r\n        if (this._checkbox){\r\n            this._checkbox.checked = value;\r\n        }\r\n    }\r\n    get text(){\r\n        if(this._textArea){\r\n            return this._textArea.value;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    set text(value){\r\n        if(this._textArea){\r\n            this._textArea.value = value;\r\n        }\r\n    }\r\n\r\n    _onTextFocus(){\r\n        this._lastText = this.text;\r\n    }\r\n    _onTextBlur(){\r\n        if (this.text !== this._lastText){\r\n            this.model.update(this.id, this.text, this.isChecked);\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * @param {any} parentNode \r\n     * @returns {Control}\r\n     * \r\n     * @memberOf TodoListItem\r\n     */\r\n    render(parentNode){\r\n\r\n        this._checkbox = gen('input', {\r\n            type: 'checkbox',\r\n            className: 'custom-checkbox_target', \r\n            onclick: ()=> this.change()\r\n        });\r\n        this._textArea = gen('textarea', {\r\n            className: 'todos-list_item_text', \r\n            oninput: ()=> this.autoresize(),\r\n            onfocus: ()=> this._onTextFocus(), \r\n            onblur: ()=> this._onTextBlur()\r\n        });\r\n\r\n        return parentNode.appendChild(\r\n            gen('div', {className: 'todos-list_item'}, [\r\n                gen('div', {className: 'custom-checkbox todos-list_item_ready-marker'}, [\r\n                    this._checkbox,\r\n                    gen('div', {className: 'custom-checkbox_visual'}, [\r\n                        gen('div', {className: 'custom-checkbox_visual_icon'})\r\n                    ])\r\n                ]),\r\n                gen('button', {className: 'todos-list_item_remove cross-button', onclick: ()=> this.remove()}),\r\n                gen('div', {className: 'todos-list_item_text-w'}, [\r\n                    this._textArea\r\n                ])\r\n            ])\r\n        )\r\n    }\r\n    remove(){\r\n        this.trigger('remove');\r\n    }\r\n    change(){\r\n        this.trigger('change');\r\n        this.model.update(this.id, this.text, this.isChecked);\r\n        if (this.isChecked){\r\n            this._textArea.style.textDecoration = 'line-through';    \r\n        } else {\r\n            this._textArea.style.textDecoration = 'none';    \r\n        }\r\n    }\r\n    autoresize(){ \r\n        this._textArea.style.height = '36px';\r\n        this._textArea.style.height = this._textArea.scrollHeight + 'px';\r\n    }\r\n};\r\n","import ArrayEventable from \"./utils/ArrayEventable\";\r\nimport TodoListItem from \"./TodoListItem\";\r\nimport gen from \"./utils/DOMGenerator\";\r\nimport Eventable from \"./utils/Eventable\";\r\nimport Model from \"./Model\";\r\n\r\nexport default class TodoList extends Eventable {\r\n    /**\r\n     * Creates an instance of TodoList.\r\n     * @param {Control} parentNode \r\n     * \r\n     * @memberOf TodoList\r\n     */\r\n    constructor(parentNode){\r\n        super();\r\n        this.DOMNode = this.render(parentNode);\r\n        this.items = new ArrayEventable();\r\n        this.model = new Model;\r\n\r\n        this.model.read().then(data => {\r\n            data.forEach(todo => {\r\n                this.renderItem(todo.id, todo.description, todo.isChecked);\r\n            })\r\n        });\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * @param {Control} parentNode \r\n     * \r\n     * @memberOf TodoList\r\n     */\r\n    render(parentNode){\r\n        return parentNode.appendChild(\r\n            gen('div', {className : 'todos-list'})\r\n        );\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * @returns {Number}\r\n     * \r\n     * @memberOf TodoList\r\n     */\r\n    getItemsCount(){\r\n        return this.items.length();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @param {String} text \r\n     * @param {Boolean} isChecked \r\n     * \r\n     * @memberOf TodoList\r\n     */\r\n    addItem(text, isChecked){\r\n        this.model.create(text).then(data => {\r\n            const item = new TodoListItem(this.DOMNode, text, data.id, isChecked);\r\n            item.on('remove', ()=> this.removeItem(item));\r\n            item.on('change', ()=> this.trigger('itemchanged'));\r\n            this.items.push(item);\r\n            this.trigger('itemchanged');\r\n            if (this.getItemsCount() == 1){\r\n                this.trigger('notEmpty');\r\n            }\r\n            return item;\r\n        });        \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param  {Number} id \r\n     * @param  {String} text \r\n     * @param  {Boolean} isChecked \r\n     * @return {void}\r\n     * @memberof TodoList\r\n     */\r\n    renderItem(id, text, isChecked){\r\n        const item = new TodoListItem(this.DOMNode, text, id, isChecked);\r\n        item.on('remove', ()=> this.removeItem(item));\r\n        item.on('change', ()=> this.trigger('itemchanged'));\r\n        this.items.push(item);\r\n        this.trigger('itemchanged');\r\n        if (this.getItemsCount() == 1){\r\n            this.trigger('notEmpty');\r\n        }\r\n        return item;\r\n    }\r\n    /**\r\n     * Удаляет элемент item из TodoList\r\n     * \r\n     * @param {TodoListItem} item \r\n     * \r\n     * @memberOf TodoList\r\n     */\r\n    removeItem(item){\r\n        this.items.remove(item);\r\n        this.DOMNode.removeChild(item.DOMNode);\r\n        this.trigger('itemchanged');\r\n        if (this.getItemsCount() === 0){\r\n            this.trigger('empty');\r\n        }\r\n        this.model.delete(item.id);\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * @returns {Number} count of unchecked elements\r\n     * \r\n     * @memberOf TodoList\r\n     */\r\n    getUncheckedCount(){\r\n        let unchecked = 0;\r\n        this.items.array.forEach(item => unchecked += !(item.isChecked));\r\n        return unchecked;\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * \r\n     * @memberOf TodoList\r\n     */\r\n    clearCompleated(){\r\n        const items = this.items.array.slice();\r\n        for (let item of items){\r\n            if (item.isChecked){\r\n                this.removeItem(item);\r\n            }\r\n        }\r\n    }\r\n};\r\n","import gen from \"./utils/DOMGenerator\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nexport default class TodoGenerator {\r\n    /**\r\n     * Creates an instance of TodoGenerator.\r\n     * @param {Control} parentNode \r\n     * @param {TodoList} todoList \r\n     * \r\n     * @memberOf TodoGenerator\r\n     */\r\n    constructor(parentNode, todoList){\r\n        this.todoList = todoList;\r\n        this.DOMNode = this.render(parentNode);\r\n    }\r\n\r\n\r\n    // Кустарный вариант двустороннего биндинга\r\n    get input(){\r\n        return this._inputControl.value;\r\n    }\r\n    set input(value){\r\n        this._inputControl.value = value;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @param {Event} event \r\n     * \r\n     * @private\r\n     * @memberOf TodoGenerator\r\n     */\r\n    submit(event){\r\n        if (this.input.trim().length > 0){\r\n            this.todoList.addItem(this.input.trim());\r\n        }\r\n        this.input = '';\r\n        event.preventDefault();\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * \r\n     * @memberOf TodoGenerator\r\n     */\r\n    checkAll(){\r\n        this.todoList.items.array.forEach( item => item.isChecked = true);\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * @param {Control} parentNode \r\n     * @returns {Control} Html outer of Todo Generator\r\n     * \r\n     * @memberOf TodoGenerator\r\n     */\r\n    render(parentNode){\r\n        this._inputControl = gen('input', {type: 'text', placeholder: 'What needs to be done?', className: 'todo-creator_text-input'});\r\n\r\n        return parentNode.insertBefore(\r\n            gen('form', {className : 'todo-creator', onsubmit: e => this.submit(e)}, [\r\n                gen('div', {className: 'todo-creator_check-all', onclick: ()=> this.checkAll()}),\r\n                gen('div', {className: 'todo-creator_text-input-w'}, [\r\n                    this._inputControl\r\n                ])\r\n            ])\r\n        , this.todoList.DOMNode);\r\n    }\r\n};\r\n","import gen from \"./utils/DOMGenerator\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nexport default class StatusBar {\r\n    /**\r\n     * Creates an instance of StatusBar.\r\n     * @param {Control} parentNode \r\n     * @param {TodoList} todoList \r\n     * \r\n     * @memberOf StatusBar\r\n     */\r\n    constructor(parentNode, todoList){\r\n        this.todoList = todoList;\r\n        this.DOMNode = this.render(parentNode);\r\n        // filters\r\n        this.filterStatuses = Object.freeze({\r\n            all : 1,\r\n            active: 2,\r\n            compleated: 3\r\n        });\r\n        this.filterStatus = this.filterStatuses.all;\r\n        // counter\r\n        this.todoList.on('itemchanged', () => this.leftCount = this.todoList.getUncheckedCount());\r\n    }\r\n\r\n    // Кустарный вариант двустороннего биндинга\r\n    get leftCount(){\r\n        if (this._itemsLeftCounter){\r\n            return this._itemsLeftCounter.textContent;\r\n        } else {\r\n            return '0';\r\n        }\r\n    }\r\n    set leftCount(value){\r\n        if (this._itemsLeftCounter){\r\n            this._itemsLeftCounter.textContent = value;\r\n        }\r\n    }\r\n\r\n    set filterStatus(newStatus){ // очень некрасиво, но я не придумал, как сделать красивее\r\n        this._filterActiveBtn.classList.remove('__selected');\r\n        this._filterCompleatedBtn.classList.remove('__selected');\r\n        this._filterAllBtn.classList.remove('__selected');\r\n        if (newStatus == this.filterStatuses.all){\r\n            this._filterAllBtn.classList.add('__selected');\r\n            this.todoList.items.array.forEach(item => {\r\n                item.DOMNode.style.display = 'block';\r\n            });\r\n        } else if (newStatus == this.filterStatuses.active){\r\n            this._filterActiveBtn.classList.add('__selected');\r\n            this.todoList.items.array.forEach(item => {\r\n                if (item.isChecked){\r\n                    item.DOMNode.style.display = 'none';\r\n                } else {\r\n                    item.DOMNode.style.display = 'block';\r\n                }\r\n            });\r\n        } else {\r\n            this._filterCompleatedBtn.classList.add('__selected');\r\n            this.todoList.items.array.forEach(item => {\r\n                if (!item.isChecked){\r\n                    item.DOMNode.style.display = 'none';\r\n                } else {\r\n                    item.DOMNode.style.display = 'block';\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @param {Control} parentNode \r\n     * @returns {Control}\r\n     * \r\n     * @memberOf StatusBar\r\n     */\r\n    render(parentNode){\r\n        // очень-очень некрасиво. Нужно было, наверное сделать свой или подключить НОРМАЛЬНЫЙ шаблонизатор\r\n        this._itemsLeftCounter = document.createTextNode(this.todoList.getUncheckedCount());\r\n        this._filterAllBtn = gen('button', {className: 'filters-item all-btn __selected', textContent:'All', onclick: () => this.filterStatus = this.filterStatuses.all });\r\n        this._filterActiveBtn = gen('button', {className: 'filters-item active-btn', textContent: 'Active', onclick: () => this.filterStatus = this.filterStatuses.active});\r\n        this._filterCompleatedBtn = gen('button', {className: 'filters-item completed-btn', textContent: 'Completed', onclick: () => this.filterStatus = this.filterStatuses.compleated});\r\n\r\n        let itemsLeft = document.createTextNode(' items left');\r\n\r\n        return parentNode.appendChild(\r\n            gen('div', {className : 'todos-toolbar'}, [\r\n                gen('div', {className: 'todos-toolbar_unready-counter'}, [\r\n                    this._itemsLeftCounter,\r\n                    itemsLeft\r\n                ]),\r\n                gen('button', {className: 'todos-toolbar_clear-completed', textContent: 'Clear completed', onclick: ()=> this.todoList.clearCompleated()}),\r\n                gen('div', {className: 'filters todos-toolbar_filters'}, [\r\n                    this._filterAllBtn,\r\n                    this._filterActiveBtn,\r\n                    this._filterCompleatedBtn\r\n                ])\r\n            ])\r\n        );\r\n    }\r\n};\r\n","import '../styles/index.scss';\nimport Todo from './Todo';\n\nnew Todo(document.querySelector('.main-layout'));\n\nconsole.log('init');","import gen from \"./utils/DOMGenerator\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoGenerator from \"./TodoGenerator\";\r\nimport StatusBar from \"./StatusBar\";\r\n\r\nexport default class Todo {\r\n\r\n    /**\r\n     * Creates an instance of Todo.\r\n     * @param {Object} parentNode \r\n     * \r\n     * @memberOf Todo\r\n     */\r\n    constructor(parentNode){\r\n        this.DOMNode = this.render(parentNode);\r\n\r\n        this.todoList = new TodoList(this.DOMNode);\r\n        this.todoGenerator = new TodoGenerator(this.DOMNode, this.todoList);\r\n        this.statusBar = new StatusBar(this.DOMNode, this.todoList);\r\n\r\n        this.todoList.on('empty', ()=> this._board.classList.remove('__has-content'));\r\n        this.todoList.on('notEmpty', ()=> this._board.classList.add('__has-content'));\r\n    }\r\n\r\n    /**\r\n     * Render Todo outer\r\n     * \r\n     * @param {Object} parentNode \r\n     * \r\n     * @memberOf Todo\r\n     */\r\n    render(parentNode){\r\n        this._board = gen('div', {className : 'todo-board'});\r\n        return parentNode.appendChild(this._board);\r\n    }\r\n};\r\n"],"sourceRoot":""}