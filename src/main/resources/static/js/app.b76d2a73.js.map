{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/utils/Eventable.js","webpack:///./src/scripts/utils/ArrayEventable.js","webpack:///./src/scripts/utils/DOMGenerator.js","webpack:///./src/scripts/Model.js","webpack:///./src/scripts/TodoListItem.js","webpack:///./src/scripts/TodoList.js","webpack:///./src/scripts/TodoGenerator.js","webpack:///./src/scripts/StatusBar.js","webpack:///./src/scripts/Todo.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Eventable","_classCallCheck","this","listeners","event","callback","undefined","handlers","filter","handler","_len","arguments","args","Array","_key","forEach","listener","ArrayEventable","array","_this","ArrayEventable_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","element","trigger","member","el","index","gen","tagName","props","childs","document","createElement","prop","child","appendChild","Model","Model_classCallCheck","path","description","_xhr","id","isChecked","method","self","Promise","resolve","reject","xhr","XMLHttpRequest","token","querySelector","getAttribute","header","open","setRequestHeader","send","_getFormData","onreadystatechange","readyState","status","statusCode","statusText","JSON","parse","responseText","formData","FormData","keys","append","TodoListItem","parentNode","text","DOMNode","TodoListItem_classCallCheck","TodoListItem_possibleConstructorReturn","TodoListItem_getPrototypeOf","model","textVal","_lastText","update","_this2","_checkbox","type","className","onclick","change","_textArea","oninput","autoresize","onfocus","_onTextFocus","onblur","_onTextBlur","remove","_this3","_removeBtn","style","textDecoration","height","scrollHeight","checked","TodoList","TodoList_classCallCheck","TodoList_possibleConstructorReturn","TodoList_getPrototypeOf","connectToDOM","items","todos","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","todo","dataset","createItemWithoutRender","err","return","then","item","render","on","removeItem","getItemsCount","itemNode","removeChild","delete","unchecked","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","TodoGenerator","todoList","TodoGenerator_classCallCheck","input","trim","addItem","preventDefault","_inputControl","placeholder","insertBefore","onsubmit","e","submit","checkAll","StatusBar","StatusBar_classCallCheck","filterStatuses","freeze","all","active","compleated","filterStatus","leftCount","getUncheckedCount","_itemsLeftCounter","createTextNode","_filterAllBtn","textContent","_filterActiveBtn","_filterCompleatedBtn","itemsLeft","clearCompleated","newStatus","classList","add","display","Todo","Todo_classCallCheck","todoGenerator","statusBar","_board","addEventListener","console","log"],"mappings":"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","file":"js/app.b76d2a73.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([84,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","'use strict';\n\nexport default class Eventable {\n    constructor(){\n        this.listeners = {}; // event : [listener1(), listener2()]\n    }\n    /**\n     * Register listener on event\n     * \n     * @param {String} event \n     * @param {function()} callback \n     * \n     * @memberOf Eventable\n     */\n    on(event, callback){\n        this.listeners[event] = this.listeners[event] || [];\n        this.listeners[event].push(callback);\n    }\n\n    /**\n     * Remove listener on event\n     * \n     * @param {String} event \n     * @param {function()} callback \n     * @returns {Boolean}\n     * \n     * @memberOf Eventable\n     */\n    off(event, callback){\n        if (event === undefined){\n            this.listeners = {};\n            return true;\n        }\n        let handlers = this.listeners[event];\n        if (!handlers || handlers.length === 0){\n            return false;\n        }\n        if (callback){\n            this.listeners[event] = handlers.filter( handler => typeof handler === 'function' && handler !== callback );\n        } else {\n            this.listeners[event] = [];\n        }\n        return true;\n    }\n\n    /**\n     * Fire the event\n     * \n     * @param {String} event \n     * @param {object[]} args \n     * \n     * @memberOf Eventable\n     */\n    trigger(event, ...args){\n        let listeners = this.listeners[event] || [];\n        listeners.forEach(listener => listener(...args));\n    }\n};\n","'use strict';\n\nimport Eventable from \"./Eventable\";\n\nexport default class ArrayEventable extends Eventable {\n    /**\n     * Creates an instance of ArrayEventable.\n     * @param {Array} array \n     * \n     * @memberOf ArrayEventable\n     */\n    constructor(array){\n        super();\n        this.array = array || [];\n    }\n\n    /**\n     * Append the element to array and fires the 'push' event (using array.push)\n     * \n     * @param {any} element \n     * @returns {Number} length of array after append\n     * \n     * @memberOf ArrayEventable\n     */\n    push(element){\n        let length = this.array.push(element);\n        this.trigger('push', element);\n        return length;\n    }\n\n    /**\n     * \n     * Empty the array and fires 'clear' event\n     * \n     * @memberOf ArrayEventable\n     */\n    clear(){\n        this.array = [];\n        this.trigger('clear');\n    }\n\n    /**\n     * Removes all occurrences of an item in an array.\n     * \n     * @param {any} member \n     * \n     * @memberOf ArrayEventable\n     */\n    remove(member){\n        this.array = this.array.filter( el => member !== el );\n        this.trigger('remove', member);\n    }\n\n    /**\n     * Remove item by index\n     * \n     * @param {Number} index \n     * \n     * @memberOf ArrayEventable\n     */\n    removeByIndex(index){\n        let member = this.array[index];\n        this.array.splice(index, 1);\n        this.trigger('remove', member);\n    }\n    length(){\n        return this.array.length;\n    }\n};\n","/* \n\nExample:\n\ngen('div', { class: 'myClassName', id: 'myId'}, [\n        gen('a', { href: 'http://google.com', textContent: 'google'})\n])\n\n*/\n\n/**\n * \n * \n * @export\n * @param {String} tagName \n * @param {Object} props \n * @param {Array} childs \n * @returns {Control}\n */\nexport default function gen(tagName, props, childs){\n    let el = document.createElement(tagName);\n    //Object.assign(el,props); //ie == зло\n    for (let prop in props){\n        el[prop] = props[prop];\n    }\n    if (childs && childs.length > 0){\n        childs.forEach(child => el.appendChild(child));\n    }\n    return el;\n}","export default class Model {\n    constructor(){\n        this.path = '/todo';\n    }\n    /**\n     * `\n     * @param  {String} description \n     * @return {Promise}\n     * @memberof Model\n     */\n    create(description){\n        return this._xhr('POST', {description});\n    }\n    /**\n     * \n     * @return {Promise}\n     * @memberof Model\n     */\n    read(){\n        return this._xhr('GET');\n    }\n    /**\n     * \n     * @param  {Number} id \n     * @param  {String} description \n     * @return {Promise}\n     * @memberof Model\n     */\n    update(id, description, isChecked){\n        return this._xhr('PUT', {id, description, isChecked});\n    }\n    /**\n     * \n     * @param  {Number} id \n     * @return {Promise}\n     * @memberof Model\n     */\n    delete(id){\n        return this._xhr('DELETE', {id});\n    }\n    /**\n     * \n     * @param  {String} method Name of method\n     * @param  {Object} data Data to send to server\n     * @return {Promise}\n     * @memberof Model\n     */\n    _xhr(method, data){\n        const self = this;\n        return new Promise(function(resolve, reject){\n            const xhr = new XMLHttpRequest();\n            const token = document.querySelector(\"meta[name='_csrf']\").getAttribute('content');\n            const header = document.querySelector(\"meta[name='_csrf_header']\").getAttribute('content');\n            xhr.open(method, self.path, true);\n            xhr.setRequestHeader(header,token);\n            xhr.send(self._getFormData(data));\n            xhr.onreadystatechange = function(){\n                if (xhr.readyState !== 4) return;\n                if (xhr.status !== 200){\n                    reject({\n                        statusCode: xhr.status,\n                        statusText: xhr.statusText\n                    });\n                }\n                resolve(JSON.parse(xhr.responseText));                \n            }\n        });\n        \n    }\n    /**\n     * \n     * @param  {Object} [object={}] \n     * @return {FormData}\n     * @memberof Model\n     */\n    _getFormData(object = {}) {\n        const formData = new FormData();\n        Object.keys(object).forEach(key => formData.append(key, object[key]));\n        return formData;\n    }\n};\n","import gen from \"./utils/DOMGenerator\";\nimport Eventable from \"./utils/Eventable\";\nimport Model from \"./Model\";\n\nexport default class TodoListItem extends Eventable {\n    /**\n     * Creates an instance of TodoListItem.\n     * @param {Control} parentNode \n     * @param {String} text \n     * @param {Number} id\n     * @param {Boolean} isChecked \n     * \n     * @memberOf TodoListItem\n     */\n    constructor(parentNode, text, id, isChecked, DOMNode){\n        super();\n        this.model = new Model();\n        // this.DOMNode = this.render(parentNode);\n        this.parentNode = parentNode;\n        this.DOMNode = DOMNode;\n\n        this.isChecked = !!isChecked;\n        this.text = text;\n        this.id = id;\n\n        this.textVal = text;\n    }\n\n    // Кустарный вариант двустороннего биндинга\n    get isChecked(){\n        if (this._checkbox){\n            return this._checkbox.checked;\n        } else {\n            return false;\n        }\n    }\n    set isChecked(value){\n        if (this._checkbox){\n            this._checkbox.checked = value;\n        }\n    }\n    get text(){\n        if(this._textArea){\n            return this._textArea.value;\n        } else {\n            return '';\n        }\n    }\n    set text(value){\n        if(this._textArea){\n            this._textArea.value = value;\n        }\n    }\n\n    _onTextFocus(){\n        this._lastText = this.text;\n    }\n    _onTextBlur(){\n        if (this.text !== this._lastText){\n            this.model.update(this.id, this.text, this.isChecked);\n        }\n    }\n    /**\n     * \n     * \n     * @param {any} parentNode \n     * @returns {Control}\n     * \n     * @memberOf TodoListItem\n     */\n    render(){\n\n        this._checkbox = gen('input', {\n            type: 'checkbox',\n            className: 'custom-checkbox_target', \n            onclick: ()=> this.change()\n        });\n        this._textArea = gen('textarea', {\n            className: 'todos-list_item_text', \n            value: this.textVal,\n            oninput: ()=> this.autoresize(),\n            onfocus: ()=> this._onTextFocus(), \n            onblur: ()=> this._onTextBlur()\n        });\n\n        this.DOMNode = this.parentNode.appendChild(\n            gen('div', {className: 'todos-list_item'}, [\n                gen('div', {className: 'custom-checkbox todos-list_item_ready-marker'}, [\n                    this._checkbox,\n                    gen('div', {className: 'custom-checkbox_visual'}, [\n                        gen('div', {className: 'custom-checkbox_visual_icon'})\n                    ])\n                ]),\n                gen('button', {className: 'todos-list_item_remove cross-button', onclick: ()=> this.remove()}),\n                gen('div', {className: 'todos-list_item_text-w'}, [\n                    this._textArea\n                ])\n            ])\n        )\n    }\n\n    connectToDOM(){\n        this._checkbox = this.DOMNode.querySelector('.custom-checkbox_target');\n        this._checkbox.onclick = ()=> this.change();\n\n        this._textArea = this.DOMNode.querySelector('.todos-list_item_text');\n        this._textArea.oninput = ()=> this.autoresize();\n        this._textArea.onfocus = ()=> this._onTextFocus();\n        this._textArea.onblur  = ()=> this._onTextBlur();\n\n        this._removeBtn = this.DOMNode.querySelector('.cross-button');\n        this._removeBtn.onclick = ()=> this.remove();\n\n        return this.DOMNode;\n    }\n    remove(){\n        this.trigger('remove');\n    }\n    change(){\n        this.trigger('change');\n        this.model.update(this.id, this.text, this.isChecked);\n        if (this.isChecked){\n            this._textArea.style.textDecoration = 'line-through';    \n        } else {\n            this._textArea.style.textDecoration = 'none';    \n        }\n    }\n    autoresize(){ \n        this._textArea.style.height = '36px';\n        this._textArea.style.height = this._textArea.scrollHeight + 'px';\n    }\n};\n","import ArrayEventable from \"./utils/ArrayEventable\";\nimport TodoListItem from \"./TodoListItem\";\nimport Eventable from \"./utils/Eventable\";\nimport Model from \"./Model\";\n\nexport default class TodoList extends Eventable {\n    /**\n     * Creates an instance of TodoList.\n     * @param {Control} parentNode \n     * \n     * @memberOf TodoList\n     */\n    constructor(parentNode){\n        super();\n        this.DOMNode = this.connectToDOM();\n        this.items = new ArrayEventable();\n        this.model = new Model;\n\n        const todos = document.querySelectorAll('.todos-list_item');\n        for (let todo of todos){\n            let id = todo.dataset.id;\n            let text = todo.querySelector('textarea').value;\n            let isChecked = todo.querySelector('input').checked;\n            this.createItemWithoutRender(id, text, isChecked, todo);\n        }\n        // this.model.read().then(data => {\n        //     data.forEach(todo => {\n        //         this.renderItem(todo.id, todo.description, todo.isChecked);\n        //     })\n        // });\n    }\n    /**\n     * \n     * \n     * @param {Control} parentNode \n     * \n     * @memberOf TodoList\n     */\n    // render(parentNode){\n    //     return parentNode.appendChild(\n    //         gen('div', {className : 'todos-list'})\n    //     );\n    // }\n\n    connectToDOM(){\n        return document.querySelector('.todos-list');\n    }\n\n    /**\n     * \n     * \n     * @returns {Number}\n     * \n     * @memberOf TodoList\n     */\n    getItemsCount(){\n        return this.items.length();\n    }\n\n    /**\n     * \n     * \n     * @param {String} text \n     * @param {Boolean} isChecked \n     * \n     * @memberOf TodoList\n     */\n    addItem(text, isChecked){\n        this.model.create(text).then(data => {\n            const item = new TodoListItem(this.DOMNode, text, data.id, isChecked);\n            item.render();\n            item.on('remove', ()=> this.removeItem(item));\n            item.on('change', ()=> this.trigger('itemchanged'));\n            this.items.push(item);\n            this.trigger('itemchanged');\n            if (this.getItemsCount() == 1){\n                this.trigger('notEmpty');\n            }\n            return item;\n        });        \n    }\n\n    /**\n     * \n     * @param  {Number} id \n     * @param  {String} text \n     * @param  {Boolean} isChecked \n     * @return {void}\n     * @memberof TodoList\n     */\n    createItemWithoutRender(id, text, isChecked, itemNode){\n        const item = new TodoListItem(this.DOMNode, text, id, isChecked, itemNode);\n        item.connectToDOM();\n        item.on('remove', ()=> this.removeItem(item));\n        item.on('change', ()=> this.trigger('itemchanged'));\n        this.items.push(item);\n        this.trigger('itemchanged');\n        if (this.getItemsCount() == 1){\n            this.trigger('notEmpty');\n        }\n        return item;\n    }\n\n    /**\n     * Удаляет элемент item из TodoList\n     * \n     * @param {TodoListItem} item \n     * \n     * @memberOf TodoList\n     */\n    removeItem(item){\n        this.items.remove(item);\n        this.DOMNode.removeChild(item.DOMNode);\n        this.trigger('itemchanged');\n        if (this.getItemsCount() === 0){\n            this.trigger('empty');\n        }\n        this.model.delete(item.id);\n    }\n    /**\n     * \n     * \n     * @returns {Number} count of unchecked elements\n     * \n     * @memberOf TodoList\n     */\n    getUncheckedCount(){\n        let unchecked = 0;\n        this.items.array.forEach(item => unchecked += !(item.isChecked));\n        return unchecked;\n    }\n    /**\n     * \n     * \n     * \n     * @memberOf TodoList\n     */\n    clearCompleated(){\n        const items = this.items.array.slice();\n        for (let item of items){\n            if (item.isChecked){\n                this.removeItem(item);\n            }\n        }\n    }\n};\n","import gen from \"./utils/DOMGenerator\";\nimport TodoList from \"./TodoList\";\n\nexport default class TodoGenerator {\n    /**\n     * Creates an instance of TodoGenerator.\n     * @param {Control} parentNode \n     * @param {TodoList} todoList \n     * \n     * @memberOf TodoGenerator\n     */\n    constructor(parentNode, todoList){\n        this.todoList = todoList;\n        this.DOMNode = this.render(parentNode);\n    }\n\n\n    // Кустарный вариант двустороннего биндинга\n    get input(){\n        return this._inputControl.value;\n    }\n    set input(value){\n        this._inputControl.value = value;\n    }\n\n    /**\n     * \n     * \n     * @param {Event} event \n     * \n     * @private\n     * @memberOf TodoGenerator\n     */\n    submit(event){\n        if (this.input.trim().length > 0){\n            this.todoList.addItem(this.input.trim());\n        }\n        this.input = '';\n        event.preventDefault();\n    }\n    /**\n     * \n     * \n     * \n     * @memberOf TodoGenerator\n     */\n    checkAll(){\n        this.todoList.items.array.forEach( item => item.isChecked = true);\n    }\n    /**\n     * \n     * \n     * @param {Control} parentNode \n     * @returns {Control} Html outer of Todo Generator\n     * \n     * @memberOf TodoGenerator\n     */\n    render(parentNode){\n        this._inputControl = gen('input', {type: 'text', placeholder: 'What needs to be done?', className: 'todo-creator_text-input'});\n\n        return parentNode.insertBefore(\n            gen('form', {className : 'todo-creator', onsubmit: e => this.submit(e)}, [\n                gen('div', {className: 'todo-creator_check-all', onclick: ()=> this.checkAll()}),\n                gen('div', {className: 'todo-creator_text-input-w'}, [\n                    this._inputControl\n                ])\n            ])\n        , this.todoList.DOMNode);\n    }\n};\n","import gen from \"./utils/DOMGenerator\";\nimport TodoList from \"./TodoList\";\n\nexport default class StatusBar {\n    /**\n     * Creates an instance of StatusBar.\n     * @param {Control} parentNode \n     * @param {TodoList} todoList \n     * \n     * @memberOf StatusBar\n     */\n    constructor(parentNode, todoList){\n        this.todoList = todoList;\n        this.DOMNode = this.render(parentNode);\n        // filters\n        this.filterStatuses = Object.freeze({\n            all : 1,\n            active: 2,\n            compleated: 3\n        });\n        this.filterStatus = this.filterStatuses.all;\n        // counter\n        this.todoList.on('itemchanged', () => this.leftCount = this.todoList.getUncheckedCount());\n    }\n\n    // Кустарный вариант двустороннего биндинга\n    get leftCount(){\n        if (this._itemsLeftCounter){\n            return this._itemsLeftCounter.textContent;\n        } else {\n            return '0';\n        }\n    }\n    set leftCount(value){\n        if (this._itemsLeftCounter){\n            this._itemsLeftCounter.textContent = value;\n        }\n    }\n\n    set filterStatus(newStatus){ // очень некрасиво, но я не придумал, как сделать красивее\n        this._filterActiveBtn.classList.remove('__selected');\n        this._filterCompleatedBtn.classList.remove('__selected');\n        this._filterAllBtn.classList.remove('__selected');\n        if (newStatus == this.filterStatuses.all){\n            this._filterAllBtn.classList.add('__selected');\n            this.todoList.items.array.forEach(item => {\n                item.DOMNode.style.display = 'block';\n            });\n        } else if (newStatus == this.filterStatuses.active){\n            this._filterActiveBtn.classList.add('__selected');\n            this.todoList.items.array.forEach(item => {\n                if (item.isChecked){\n                    item.DOMNode.style.display = 'none';\n                } else {\n                    item.DOMNode.style.display = 'block';\n                }\n            });\n        } else {\n            this._filterCompleatedBtn.classList.add('__selected');\n            this.todoList.items.array.forEach(item => {\n                if (!item.isChecked){\n                    item.DOMNode.style.display = 'none';\n                } else {\n                    item.DOMNode.style.display = 'block';\n                }\n            });\n        }\n    }\n\n    /**\n     * \n     * \n     * @param {Control} parentNode \n     * @returns {Control}\n     * \n     * @memberOf StatusBar\n     */\n    render(parentNode){\n        // очень-очень некрасиво. Нужно было, наверное сделать свой или подключить НОРМАЛЬНЫЙ шаблонизатор\n        this._itemsLeftCounter = document.createTextNode(this.todoList.getUncheckedCount());\n        this._filterAllBtn = gen('button', {className: 'filters-item all-btn __selected', textContent:'All', onclick: () => this.filterStatus = this.filterStatuses.all });\n        this._filterActiveBtn = gen('button', {className: 'filters-item active-btn', textContent: 'Active', onclick: () => this.filterStatus = this.filterStatuses.active});\n        this._filterCompleatedBtn = gen('button', {className: 'filters-item completed-btn', textContent: 'Completed', onclick: () => this.filterStatus = this.filterStatuses.compleated});\n\n        let itemsLeft = document.createTextNode(' items left');\n\n        return parentNode.appendChild(\n            gen('div', {className : 'todos-toolbar'}, [\n                gen('div', {className: 'todos-toolbar_unready-counter'}, [\n                    this._itemsLeftCounter,\n                    itemsLeft\n                ]),\n                gen('button', {className: 'todos-toolbar_clear-completed', textContent: 'Clear completed', onclick: ()=> this.todoList.clearCompleated()}),\n                gen('div', {className: 'filters todos-toolbar_filters'}, [\n                    this._filterAllBtn,\n                    this._filterActiveBtn,\n                    this._filterCompleatedBtn\n                ])\n            ])\n        );\n    }\n};\n","import TodoList from \"./TodoList\";\nimport TodoGenerator from \"./TodoGenerator\";\nimport StatusBar from \"./StatusBar\";\n\nexport default class Todo {\n\n    /**\n     * Creates an instance of Todo.\n     * @param {Object} parentNode \n     * \n     * @memberOf Todo\n     */\n    constructor(parentNode){\n        this.DOMNode = this.connectToDOM(parentNode);\n\n        this.todoList = new TodoList(this.DOMNode);\n        this.todoGenerator = new TodoGenerator(this.DOMNode, this.todoList);\n        this.statusBar = new StatusBar(this.DOMNode, this.todoList);\n\n        this.todoList.on('empty', ()=> this._board.classList.remove('__has-content'));\n        this.todoList.on('notEmpty', ()=> this._board.classList.add('__has-content'));\n    }\n\n    /**\n     * Render Todo outer\n     * \n     * @param {Object} parentNode \n     * \n     * @memberOf Todo\n     */\n    // render(parentNode){\n    //     this._board = gen('div', {className : 'todo-board'});\n    //     return parentNode.appendChild(this._board);\n    // }\n\n    connectToDOM(parentNode){\n        this._board = parentNode.querySelector('.todo-board');\n        return this._board;\n    }\n};\n","import '../styles/index.scss';\nimport Todo from './Todo';\n\ndocument.addEventListener('DOMContentLoaded', function(){\n    new Todo(document.querySelector('.main-layout'));\n    console.log('init');\n});"],"sourceRoot":""}